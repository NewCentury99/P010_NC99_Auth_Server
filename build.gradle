buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id "java"
	id "org.springframework.boot" version "3.1.5"
	id "io.spring.dependency-management" version "1.1.3"
}

group = "com.newcentury99"
version = "0.0.1-SNAPSHOT"

java {
	sourceCompatibility = "21"
}

def querydslVersion = "5.0.0"

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set("springCloudVersion", "2022.0.4")
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	implementation "org.springframework.boot:spring-boot-starter-validation"
	implementation "org.springframework.boot:spring-boot-starter-oauth2-authorization-server"
	implementation "org.springframework.boot:spring-boot-starter-oauth2-client"
	implementation "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client"
	implementation "org.springframework.cloud:spring-cloud-starter-openfeign"
	implementation "org.springframework.boot:spring-boot-starter-batch"
	implementation "jakarta.mail:jakarta.mail-api"
	implementation "org.eclipse.angus:angus-mail:2.0.1"
	implementation "io.jsonwebtoken:jjwt-api:0.11.5"
	implementation 'org.json:json:20231013'
	implementation "com.google.code.gson:gson:2.9.0"

	compileOnly "org.projectlombok:lombok"
	developmentOnly "org.springframework.boot:spring-boot-devtools"
	runtimeOnly "com.mysql:mysql-connector-j"
	runtimeOnly "io.jsonwebtoken:jjwt-impl:0.11.5"
	runtimeOnly "io.jsonwebtoken:jjwt-jackson:0.11.5"
	annotationProcessor "org.projectlombok:lombok"
	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testImplementation "org.springframework.batch:spring-batch-test"
	testImplementation "org.springframework.security:spring-security-test"

	// Querydsl with annotationProcessor
	implementation "com.querydsl:querydsl-jpa:${querydslVersion}:jakarta"
	implementation "com.querydsl:querydsl-apt:${querydslVersion}:jakarta"
	implementation "com.querydsl:querydsl-core:${querydslVersion}"
	annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jakarta"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named("bootBuildImage") {
	builder = "paketobuildpacks/builder-jammy-base:latest"
}

tasks.named("test") {
	useJUnitPlatform()
}
tasks.withType(JavaCompile).configureEach {
	configure(options) {
		options.compilerArgs << "-parameters" // examples
	}
}

clean {
	delete file("src/main/generated") // IntelliJ Annotation processor Output Directory
}
